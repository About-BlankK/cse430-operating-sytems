//==================================================================
//  Authors:
//      Man Do
//      Tyler Brockett
//  Assignment:
//      Homework 3
//  Due Date:
//      11-16-2015
//==================================================================

//------------------------------
// 	Problem 1A
//------------------------------

void shift(int *A, int *B){
    *B = *A;
    *A = 0;
}

typedef struct Semaphore
{
    int value, lock;
} Semaphore;

void P(Semaphore *S) {
    int a = 0;
    while (a == 0) {
        shift(s->lock, a);
    }
    while (S->value == 0) {
        S->lock = 1;    //unlock
        while (s->value == 0) {
            int a = 0;
            while(a == 0){
                shift(s->lock, a);
            }
        }
    }
    S->value--;
    S->lock = 1;
}

void V(Semaphore *S) {
    int a = 0;
    while (a == 0) {
        shift(s->lock, a);
    }
    S->value++;
    S->lock = 1;
}

//------------------------------
// 	Problem 1B
//------------------------------

typedef struct Semaphore
{
    int value, lock;
    Queue * tcb_queue;
} Semaphore;

P(Semaphore *S){
    int a = 0;
	while(a == 0){
		shift(s->lock, a);
	}
	S->value--;
	if (S->value < 0){
	    TCB * tcb = delQ(runQ);
		addQ(S->tcb_queue, tcb);
		S->lock = 0;
		swapcontext(&tcb->context, &runQ->head->context);
	}
}

V(Semaphore *S){
    int a = 0;
	while(a == 0){
		shift(s->lock, a);
	}
	S->value++
	if (S->value <= 0){
		AddQ(RunQ, delQ(S->tcb_queue));
	}
	//yeild();
	S->lock = 1;
}


//------------------------------
// 	Problem 2
//------------------------------

int x = 0;
int s1 = 1;
int s2 = 0;

void P0(){
	p(s1);
	x++;
	v(s2);
}

void P1(){
	P(s2);
	if(x%1==0)
		print(x);
	V(s1);
}

void P2(){
	P(s2);
	if(x%2==0)
		print(x);
	V(s1);
}

void P3(){
	P(s2);
	if(x%3==0)
		print(x);
	V(s1);
}



//------------------------------
// 	Problem 3
//------------------------------

Enq(r):
	while(){		//lock, atomic
		shift();	//lock, atomic
	}
	if ()


//------------------------------
// 	Problem 4
//------------------------------